Liste des features du save system :

Les paramètres globaux de sauvegarde et de profils sont dans "ProjectSettings -> Save Settings" :
	-Pouvoir effacer toutes les sauvegardes et profils avec un bouton

	-Possibilité de customiser le format de fichier (Json / Binary)
	-Possibilité de customiser l'extension du fichier (si Binary est sélectionné)
	-Possibilité de customiser le nom du dossier de sauvegarde

	-Possibilité de passer de sauvegarde individuelle à des profils
	-Possibilité de customisé le nombre de profils
	-Possibilité de customiser le nom du dossier contenant les profils

Le script Save Manager peut sauvegarder n'importe quel type T pouvant être sauvegardé en Json/Binary à l'aide de 2 fonctions :
	- SaveData<T>(T dataToSave, string saveName, Texture2D fileImage = null, bool takeScreenShot = false)
		Il est notamment possible de mettre une image, voire de prendre une capture d'écran
		
	- T LoadData<T>(string saveName)

	-SaveListOfSerializableClass<T>(List<T> dataToSave, string saveName, Texture2D fileImage = null, bool takeScreenShot = false)
		Permet de sauvegarder une liste de class sérialisables

	-List<SaveFileData<T>> GetEverySaveFile<T>()
		Permet de charger une liste de class sérialisables

Le prefab SavePanelManager permet de fournir une liste de sauvegardes avec :
	-"GameObjectToSave" qui propose ensuite une liste des différents components, l'utilisateur peut ensuite choisir celui à sauvegarder.
	-Nombre de sauvegardes maximum
	-L'image montrée et créée si l'on sauvegarde (rien, une image, une image aléatoire parmi une liste, une capture d'écran)
	-L'espacement entre les panneaux et la direction dans laquelle ils s'affichent
	-Possibilité de lier un "input field" pour rentrer un nom de sauvegarde
	-Sinon, possibilité de mettre un nom de sauvegarde par défaut
	-Avec comme possibilité d'incrémenter automatiquement quand on crée une sauvegarde
	-un Unity Event pour ajouter des feedbacks quand le nombre limite de sauvegardes est atteint

	-Une fonction "CreateSaveFromComponent" permettant de créer une sauvegarde de toutes les variables de n'importe quel component

La scène saveExampleScene contient un exemple utilisant un script possédant des variables (TestSaveContener) sauvegardées et chargées par un autre script (TestSaveScript) qui se contente d'appeler des fonctions de SavePanelManager.

La scène d'exemple affichera aussi une sélection des profils si "use profiles" est activé dans les paramètres, avec la possibilité de créer, changer et effacer des profils à l'aide du script d'exemple "ProfileUI".